(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{487:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"preface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#preface"}},[t._v("#")]),t._v(" Preface")]),t._v(" "),s("p",[t._v("Open source projects that I maintain "),s("a",{attrs:{href:"https://github.com/eryajf/Thanks-Mirror",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thanks-Mirror"),s("OutboundLink")],1),t._v(" Collated and recorded various package managers, system images, and useful images of common software, as the project became more and more perfect, to today, has accumulated 1091 links, over time, some domestic mirrors may stop maintenance, how to customize the perception of those links that have failed, is a matter to consider.")]),t._v(" "),s("p",[t._v("This article introduces an interesting little action, its main function is to automatically scan the links in the repository, and then request the links, according to the custom rules, automatically throw abnormal links, and then create these links into the issue.")]),t._v(" "),s("h2",{attrs:{id:"disposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disposition"}},[t._v("#")]),t._v(" Disposition")]),t._v(" "),s("p",[t._v("Used Actionsï¼š"),s("a",{attrs:{href:"lycheeverse/lychee-action"}},[t._v("lycheeverse/lychee-action")]),t._v("\nThe use of configuration is actually very simple, basically after reading the official introduction document can be used to use, but the official document introduction method is not very flexible, the official is with the help of its open source projectï¼š"),s("a",{attrs:{href:"https://github.com/lycheeverse/lychee",target:"_blank",rel:"noopener noreferrer"}},[t._v("lychee"),s("OutboundLink")],1),t._v("To complete the check, this article will extend the configuration file for this open source project to achieve richer capabilities.")]),t._v(" "),s("p",[t._v("Start by adding the Actions profileï¼Œe.g.Â "),s("code",[t._v(".github/workflows/links-check.yml")]),t._v("ï¼š")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ðŸ”— æ£€æŸ¥é“¾æŽ¥\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" main\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cron")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00 18 * * *"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkChecker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Link Checker\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lychee\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lycheeverse/lychee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1.5.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secrets.GITHUB_TOKEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check all markdown and html files in repo (default)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config ./.github/config/lychee.toml README.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use json as output format (instead of markdown)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" markdown\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use different output file path")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Create Issue From File\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.lychee.outputs.exit_code "),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 0\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("evans/create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("issue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file@v3\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ðŸ”— é“¾æŽ¥æ£€æŸ¥æŠ¥å‘Š\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("content-filepath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" report"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" automated issue\n")])])]),s("blockquote",[s("p",[t._v("Briefly introduce this action: when there is a content submission, and it will automatically run at 18 o'clock every day (of course, you can also run it manually), automatically detect all links in the "),s("code",[t._v("README.md")]),t._v(" file, use the configuration file "),s("code",[t._v("./.github/config/lychee.toml")]),t._v(", the result is output to "),s("code",[t._v("./lychee/out.md")]),t._v(", the output format is Markdown, if all the checks pass, there will be no action, if the check fails, An issue will be created automatically.")])]),t._v(" "),s("p",[t._v("The above content mentions "),s("code",[t._v(".github/config/lychee.toml")]),t._v(", and here is a list of the configuration files I used:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Display  #############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Verbose program output")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("verbose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Show progress")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("progress")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Path to summary output file.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# output = "report.md"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Cache  ###############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable link caching. This can be helpful to avoid checking the same links on")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# multiple runs.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("cache")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Runtime  #############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Number of threads to utilize.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Defaults to number of cores available to the system if omitted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("threads")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of allowed redirects [default: 10]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("max_redirects")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of concurrent network requests [default: 128]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("max_concurrency")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Requests  ############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# User agent to send with each request")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("user_agent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl/7.83.1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Website timeout from connect to response finished")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Minimum wait time in seconds between retries of failed requests.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("retry_wait_time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Comma-separated list of accepted status codes for valid links.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Omit to accept all response types.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#accept = "text/html"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Proceed for server connections considered insecure (invalid TLS)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("insecure")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Comma-separated list of accepted status codes for valid links.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't work as of yet until https://github.com/lycheeverse/lychee/issues/644")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is resolved")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("accept")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("429")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Only test links with the given scheme (e.g. https)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Omit to check links with any scheme")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#scheme = "https"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Request method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("method")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Custom request headers")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("headers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Exclusions  ##########################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude URLs from checking (supports regex)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# balena base images account for ~1400 request to GitHub, they are")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# omitted to avoid being rate limited.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The openvpn link is omitted as trying to auto chek it results in")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 503, even when it is available.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The meta-balena link is included in parameterized scripts and as")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a result will always produce a failing link.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The myorg/myapp link is a dummy address used in an example contract so is omitted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The balena/resin API urls will not respond to unauthenticated requests")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The gstatic and googleapis links go 404 and are excluded ever since we started checking HTML")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# balenaCLI linux binary URLs always error out since they are generated on run time only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File URLs are excluded as they aren't checked properly and error out")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"developer.aliyun.com/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mirrors.ustc.edu.cn/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eryajf.net/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsproxy.cn/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.cloud.tencent.com/go/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://maven.aliyun.com/nexus/content/groups/public/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude URLs contained in a file from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("include_verbatim")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude all private IPs from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Equivalent to setting `exclude_private`, `exclude_link_local`, and `exclude_loopback` to true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_all_private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude private IP address ranges from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_private = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude link-local IP address range from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_link_local = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude loopback IP address range and localhost from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_loopback = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude all mail addresses from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_mail")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("Most of these contents are generic, and the two things that may need to be adjusted are: "),s("code",[t._v("accept")]),t._v(" and "),s("code",[t._v("exclude")]),t._v(", when I first checked, I found that all "),s("code",[t._v("developer.aliyun.com")]),t._v(" access in GitHub Actions was a network failure, guessing that ali restricted external access, which is understandable, so I added the entire domain name to the exclusion.")]),t._v(" "),s("p",[t._v("In short, checking the results requires some filtering analysis yourself, and then adjusting it in combination with the meaning of the configuration file.")]),t._v(" "),s("h2",{attrs:{id:"pr-automatic-checking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pr-automatic-checking"}},[t._v("#")]),t._v(" PR automatic checking")]),t._v(" "),s("p",[t._v("If the action above does not check the PR, you can also add another action specifically to detect the link submitted by the PR:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("$ cat link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pr.yml\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Links (Fail Fast)\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkChecker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Link Checker\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lycheeverse/lychee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1.5.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check all markdown and html files in repo (default)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config ./.github/config/lychee.toml README.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use json as output format (instead of markdown)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" markdown\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use different output file path")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fail action on broken links")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secrets.GITHUB_TOKEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("In this way, when there are abnormal links during PR, the detection will fail, and some links that may be bad will be merged into the project.")]),t._v(" "),s("h2",{attrs:{id:"effect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#effect"}},[t._v("#")]),t._v(" Effect")]),t._v(" "),s("p",[t._v("The effect after passing the test is as follows:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/eryajf/tu/main/img/image_20220808_154825.png",alt:"image_20220808_154825"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);