(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{492:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("我维护的开源项目 "),s("a",{attrs:{href:"https://github.com/eryajf/Thanks-Mirror",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thanks-Mirror"),s("OutboundLink")],1),t._v(" 整理记录了各个包管理器，系统镜像，以及常用软件的好用镜像，随着项目越来越完善，到今天，已经累计整理链接 1091 个，随着时间推移，一些国内镜像可能会停止维护，如何自定感知那些已经失效的链接，就是一个需要考虑的事情了。")]),t._v(" "),s("p",[t._v("本文就介绍一个有意思的小动作，它的主要功能是可以自动扫描仓库内的链接，然后对链接进行请求，根据自定义的规则，自动抛出异常的链接，然后将这些链接创建到issue当中。")]),t._v(" "),s("h2",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("所用Actions："),s("a",{attrs:{href:"lycheeverse/lychee-action"}},[t._v("lycheeverse/lychee-action")])]),t._v(" "),s("p",[t._v("使用配置其实非常简单，基本上阅读完官方介绍文档就可以上手使用了，不过官方文档介绍的方式并不是很灵活，官方是借助其开源的项目："),s("a",{attrs:{href:"https://github.com/lycheeverse/lychee",target:"_blank",rel:"noopener noreferrer"}},[t._v("lychee"),s("OutboundLink")],1),t._v("来完成检查，本文将针对这个开源项目拓展的配置文件，来实现更加丰富的能力。")]),t._v(" "),s("p",[t._v("首先添加Actions配置文件，e.g. "),s("code",[t._v(".github/workflows/links-check.yml")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 🔗 检查链接\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" main\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cron")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00 18 * * *"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkChecker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Link Checker\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lychee\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lycheeverse/lychee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1.5.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secrets.GITHUB_TOKEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check all markdown and html files in repo (default)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config ./.github/config/lychee.toml README.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use json as output format (instead of markdown)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" markdown\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use different output file path")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Create Issue From File\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.lychee.outputs.exit_code "),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 0\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" peter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("evans/create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("issue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("file@v3\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 🔗 链接检查报告\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("content-filepath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" report"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" automated issue\n")])])]),s("blockquote",[s("p",[t._v("简单介绍这个动作：当有内容提交，以及每天18点会自动运行（当然也可以手动运行），自动检测 "),s("code",[t._v("README.md")]),t._v("文件中的所有链接，使用配置文件 "),s("code",[t._v("./.github/config/lychee.toml")]),t._v("，结果输出到 "),s("code",[t._v("./lychee/out.md")]),t._v("，输出格式为Markdown，如果全部检查通过，则不会有任何动作，如果检查失败，则会自动创建issue。")])]),t._v(" "),s("p",[t._v("上边内容提到了 "),s("code",[t._v(".github/config/lychee.toml")]),t._v("，这里列出我使用的配置文件：")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Display  #############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Verbose program output")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("verbose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Show progress")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("progress")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Path to summary output file.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# output = "report.md"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Cache  ###############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enable link caching. This can be helpful to avoid checking the same links on")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# multiple runs.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("cache")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Runtime  #############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Number of threads to utilize.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Defaults to number of cores available to the system if omitted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("threads")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of allowed redirects [default: 10]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("max_redirects")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of concurrent network requests [default: 128]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("max_concurrency")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Requests  ############################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# User agent to send with each request")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("user_agent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl/7.83.1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Website timeout from connect to response finished")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("timeout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Minimum wait time in seconds between retries of failed requests.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("retry_wait_time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Comma-separated list of accepted status codes for valid links.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Omit to accept all response types.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#accept = "text/html"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Proceed for server connections considered insecure (invalid TLS)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("insecure")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Comma-separated list of accepted status codes for valid links.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't work as of yet until https://github.com/lycheeverse/lychee/issues/644")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is resolved")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("accept")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("429")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Only test links with the given scheme (e.g. https)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Omit to check links with any scheme")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#scheme = "https"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Request method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("method")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Custom request headers")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("headers")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#############################  Exclusions  ##########################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude URLs from checking (supports regex)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# balena base images account for ~1400 request to GitHub, they are")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# omitted to avoid being rate limited.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The openvpn link is omitted as trying to auto chek it results in")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 503, even when it is available.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The meta-balena link is included in parameterized scripts and as")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a result will always produce a failing link.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The myorg/myapp link is a dummy address used in an example contract so is omitted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The balena/resin API urls will not respond to unauthenticated requests")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The gstatic and googleapis links go 404 and are excluded ever since we started checking HTML")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# balenaCLI linux binary URLs always error out since they are generated on run time only")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File URLs are excluded as they aren't checked properly and error out")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"developer.aliyun.com/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mirrors.ustc.edu.cn/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eryajf.net/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsproxy.cn/*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.cloud.tencent.com/go/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://maven.aliyun.com/nexus/content/groups/public/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude URLs contained in a file from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("include_verbatim")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude all private IPs from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Equivalent to setting `exclude_private`, `exclude_link_local`, and `exclude_loopback` to true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_all_private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude private IP address ranges from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_private = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude link-local IP address range from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_link_local = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# # Exclude loopback IP address range and localhost from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exclude_loopback = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude all mail addresses from checking")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("exclude_mail")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("其中大部分内容都通用，可能需要调整的两个内容是："),s("code",[t._v("accept")]),t._v("与 "),s("code",[t._v("exclude")]),t._v("，一开始我检查的时候，发现所有 "),s("code",[t._v("developer.aliyun.com")]),t._v("在GitHub Actions中访问都是网络失败，猜测应该是ali限制了外部访问，这也能理解，因此就把整个域名全部加到排除的行列了。")]),t._v(" "),s("p",[t._v("总之检查结果需要自己进行一些过滤分析，然后再结合配置文件的含义进行调整。")]),t._v(" "),s("h2",{attrs:{id:"pr自动检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pr自动检查"}},[t._v("#")]),t._v(" PR自动检查")]),t._v(" "),s("p",[t._v("如上action并没有对PR进行检查，你还可以再添加一个动作，专门用于检测PR提交上来的链接：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("$ cat link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pr.yml\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Links (Fail Fast)\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkChecker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Link Checker\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lycheeverse/lychee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1.5.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check all markdown and html files in repo (default)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config ./.github/config/lychee.toml README.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use json as output format (instead of markdown)")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" markdown\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use different output file path")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./lychee/out.md\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fail action on broken links")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secrets.GITHUB_TOKEN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样当pr时有异常的链接，将会检测失败，以前置预检一些可能是坏的链接合并到项目。")]),t._v(" "),s("h2",{attrs:{id:"效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[t._v("#")]),t._v(" 效果")]),t._v(" "),s("p",[t._v("检测通过之后的效果如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/eryajf/tu/main/img/image_20220808_154825.png",alt:"image_20220808_154825"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);